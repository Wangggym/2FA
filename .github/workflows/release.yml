name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  wait-for-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for CI
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: 'test'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success
          timeout: 900

  build:
    needs: wait-for-ci
    uses: ./.github/workflows/reusable-steps.yml
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    with:
      os: ${{ matrix.os }}
      flutter_version: '3.24.1'

  release:
    needs: [wait-for-ci, build]
    if: github.event.base_ref == 'refs/heads/master'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            build_target: apk
          - os: macos-latest
            build_target: ios,macos
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: ./.github/workflows/reusable-steps.yml
        with:
          os: ${{ matrix.os }}
          flutter_version: '3.24.1'

      # Android构建
      - name: Build Android
        if: matrix.os == 'ubuntu-latest'
        run: flutter build apk --release

      # macOS构建
      - name: Build macOS
        if: matrix.os == 'macos-latest'
        run: |
          flutter config --enable-macos-desktop
          flutter build macos --release
          cd build/macos/Build/Products/Release
          zip -r ../../../../../macos.zip *.app

      # iOS构建
      - name: Build iOS
        if: matrix.os == 'macos-latest'
        run: |
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          zip -r ../../../ios.zip .

      # 上传构建产物
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: |
            *.zip
            build/app/outputs/flutter-apk/*.apk

      # 下载所有构建产物并创建Release
      - name: Download all artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.zip
            artifacts/**/*.apk
          draft: false
          prerelease: false
          generate_release_notes: true